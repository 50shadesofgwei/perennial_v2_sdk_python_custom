
from eth_abi import decode
from web3 import Web3

# Provided byte data for action=6 (COMMIT_PRICE)
byte_data = "0x000000000000000000000000663b38a93fdc2164d45f35051b0f905211d1c9e4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000066d04003000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ec5d399846a9209f3fe5881d70aae9268c94339ff9817e8d18ff19fa05eea1c800000000000000000000000000000000000000000000000000000000000004e3504e41550100000003b801000000040d006b66aee750dd389c8a1f71870c591ac83e1fdebc81666a42314db098fb1743d466a230feb2f1b3073fa4336b5dee2c5ad77c428216fa56958f4a01063e3bb949010224595a3da951cb87196ace770b2f24e8d2c92be2f420bd485e77978565aedf1a41621ef0fda41cdf3987f1aa0f0b8c1719601bd4bbac579239eca2d95d4de30d000325a23c978d56016d9705bfc60251530dc2d581c253f3531611122732e1ef37b701f2c35e03de6cc6abb5fde2f272c1e431045ef384e28f12150b4451e6a050a3000428e6b581e4ad5ad8ceb342ea944c7de2c9ad99e9d3b2e7256767f0e3f478676c665d2170fbff9ac67688ad92dc2b9acc2fb7c8106ca278b747a585ef064da7590006ceb7b0e52ea8650efff0717d07e71c9fa4dbb614de96aee664343d60d6d4a92c1c09b34cfcc5be04eb3e66c680d34fc2cca41f61ef84d640f893c2bd833edbdc0008dc5cd69e904d1a8d591fea94a14345012b17765938e99a319a311bea6e83972a3862d0c3419359040be9a0000b32e3d53653bff7431d653aeb9b891a6ee95af3000aa21b58c5b6a1ba54ae207506488ddbe13800904f167362e3bf082f35154c3cb01f86460c6efa8a74b51927f16233bbcb67f0f0b117a9d0b008fcfb03e7e5a610010bf9064067fd0278b3c4adba5e9a00706885a7440fcb85525275c2fda48d4ccbcd5d42b39f04a19ba0cf1bcad580007fee1fed3a27d1e98da8cf6ea9e6a24e9a79010cc5682b4a69c4fdfd0962f65e93e66c271666c8037d006d092600f42bc3598521445b3f517d09becc3a3a36d8c24835136ebb3baf84bf0daeb025b4cf6cb3cbe1000dd792ac2432350359ec1bcf0789d9eb359d38a9d9d595671b298b85e518db8e76289224170971d277fb29c856fae92778cb55d9c99a62be1a1b91ba9510f9c40d000e16769b4e2f0885dd693228a0f92bd9513f8ecc9357cc787e47f12283aff0efa4009effdba127095093b865a64923a93a4e18923097422e39d386e4124c44423f010fcdbc5b9d44685c5bad47183b7e70f9ea54e41c119b6b18e9fe2768c7d726052409a89af44445b00effbc55c1cc31e317aad38dbf0222f151cf950a292fb5ab3600127a731560a5d012262b81a39da8b21077c466066b417db6a0dc25c8bd342b5c506ba2358de9553740b08e969afeed0d939eb868210766110b8c20c243010f958e0166d0400700000000001ae101faedac5851e32b9b23b5f9411a8c2bac4aae3ed4dd7b811dd1a72ea4aa71000000000496a2360141555756000000000009a1f33000002710cf1a6cb03f4ab9d66577f8635169c464c552c12901005500ec5d399846a9209f3fe5881d70aae9268c94339ff9817e8d18ff19fa05eea1c800000000036bed54000000000000e13efffffff80000000066d040070000000066d0400600000000036b3fdf000000000000eaca0ac7a497b703debf41aefd9cbf6a119bce1702d435b038da19ff3412ffb2ec44d2227d29805c2db43b5fe59f9c0a46d5082877815f59597f24728e92173cbc1fd9ab683061f27f8660f87152a859b3a1c3961b12ccdf1c4446c724b5f6caa87a62ea39e57008cee7e3350707263558dc7243d239ddc5a3c9d3be4d6a06d791eee9731574b719268d495cf7390bd231bd34423ead341e6f3f69acbd4324aa968c89a69eba225f951fc449fc89200cb29ffec4cfaf98c4e132a2e372d66357dba1ffb8f3b70d6bb75ab50000000000000000000000000000000000000000000000000000000000"
data_bytes = rb'PNAU\x01\x00\x00\x00\x03\xb8\x01\x00\x00\x00\x04\r\x00kf\xae\xe7P\xdd8\x9c\x8a\x1fq\x87\x0cY\x1a\xc8>\x1f\xde\xbc\x81fjB1M\xb0\x98\xfb\x17C\xd4f\xa20\xfe\xb2\xf1\xb3\x07?\xa43k]\xee,Z\xd7|B\x82\x16\xfaV\x95\x8fJ\x01\x06>;\xb9I\x01\x02$YZ=\xa9Q\xcb\x87\x19j\xcew\x0b/$\xe8\xd2\xc9+\xe2\xf4 \xbdH^w\x97\x85e\xae\xdf\x1aAb\x1e\xf0\xfd\xa4\x1c\xdf9\x87\xf1\xaa\x0f\x0b\x8c\x17\x19`\x1b\xd4\xbb\xacW\x929\xec\xa2\xd9]M\xe3\r\x00\x03%\xa2<\x97\x8dV\x01m\x97\x05\xbf\xc6\x02QS\r\xc2\xd5\x81\xc2S\xf3S\x16\x11\x12\'2\xe1\xef7\xb7\x01\xf2\xc3^\x03\xdel\xc6\xab\xb5\xfd\xe2\xf2r\xc1\xe41\x04^\xf3\x84\xe2\x8f\x12\x15\x0bDQ\xe6\xa0P\xa3\x00\x04(\xe6\xb5\x81\xe4\xadZ\xd8\xce\xb3B\xea\x94L}\xe2\xc9\xad\x99\xe9\xd3\xb2\xe7%gg\xf0\xe3\xf4xglf]!p\xfb\xff\x9a\xc6v\x88\xad\x92\xdc+\x9a\xcc/\xb7\xc8\x10l\xa2x\xb7G\xa5\x85\xef\x06M\xa7Y\x00\x06\xce\xb7\xb0\xe5.\xa8e\x0e\xff\xf0q}\x07\xe7\x1c\x9f\xa4\xdb\xb6\x14\xde\x96\xae\xe6d4=`\xd6\xd4\xa9,\x1c\t\xb3L\xfc\xc5\xbe\x04\xeb>f\xc6\x80\xd3O\xc2\xcc\xa4\x1fa\xef\x84\xd6@\xf8\x93\xc2\xbd\x83>\xdb\xdc\x00\x08\xdc\\\xd6\x9e\x90M\x1a\x8dY\x1f\xea\x94\xa1CE\x01+\x17vY8\xe9\x9a1\x9a1\x1b\xean\x83\x97*8b\xd0\xc3A\x93Y\x04\x0b\xe9\xa0\x00\x0b2\xe3\xd56S\xbf\xf7C\x1de:\xeb\x9b\x89\x1an\xe9Z\xf3\x00\n\xa2\x1bX\xc5\xb6\xa1\xbaT\xae u\x06H\x8d\xdb\xe18\x00\x90O\x16sb\xe3\xbf\x08/5\x15L<\xb0\x1f\x86F\x0cn\xfa\x8at\xb5\x19\'\xf1b3\xbb\xcbg\xf0\xf0\xb1\x17\xa9\xd0\xb0\x08\xfc\xfb\x03\xe7\xe5\xa6\x10\x01\x0b\xf9\x06@g\xfd\x02x\xb3\xc4\xad\xba^\x9a\x00ph\x85\xa7D\x0f\xcb\x85RRu\xc2\xfd\xa4\x8dL\xcb\xcd]B\xb3\x9f\x04\xa1\x9b\xa0\xcf\x1b\xca\xd5\x80\x00\x7f\xee\x1f\xed:\'\xd1\xe9\x8d\xa8\xcfn\xa9\xe6\xa2N\x9ay\x01\x0c\xc5h+Ji\xc4\xfd\xfd\tb\xf6^\x93\xe6l\'\x16f\xc8\x03}\x00m\t&\x00\xf4+\xc3Y\x85!D[?Q}\t\xbe\xcc::6\xd8\xc2H5\x13n\xbb;\xaf\x84\xbf\r\xae\xb0%\xb4\xcfl\xb3\xcb\xe1\x00\r\xd7\x92\xac$25\x03Y\xec\x1b\xcf\x07\x89\xd9\xeb5\x9d8\xa9\xd9\xd5\x95g\x1b)\x8b\x85\xe5\x18\xdb\x8ev(\x92$\x17\tq\xd2w\xfb)\xc8V\xfa\xe9\'x\xcbU\xd9\xc9\x9ab\xbe\x1a\x1b\x91\xba\x95\x10\xf9\xc4\r\x00\x0e\x16v\x9bN/\x08\x85\xddi2(\xa0\xf9+\xd9Q?\x8e\xcc\x93W\xccx~G\xf1"\x83\xaf\xf0\xef\xa4\x00\x9e\xff\xdb\xa1\'\tP\x93\xb8e\xa6I#\xa9:N\x18\x920\x97B.9\xd3\x86\xe4\x12LDB?\x01\x0f\xcd\xbc[\x9dDh\\[\xadG\x18;~p\xf9\xeaT\xe4\x1c\x11\x9bk\x18\xe9\xfe\'h\xc7\xd7&\x05$\t\xa8\x9a\xf4DE\xb0\x0e\xff\xbcU\xc1\xcc1\xe3\x17\xaa\xd3\x8d\xbf\x02"\xf1Q\xcf\x95\n)/\xb5\xab6\x00\x12zs\x15`\xa5\xd0\x12&+\x81\xa3\x9d\xa8\xb2\x10w\xc4f\x06kA}\xb6\xa0\xdc%\xc8\xbd4+\\Pk\xa25\x8d\xe9U7@\xb0\x8e\x96\x9a\xfe\xed\r\x93\x9e\xb8h!\x07f\x11\x0b\x8c \xc2C\x01\x0f\x95\x8e\x01f\xd0@\x07\x00\x00\x00\x00\x00\x1a\xe1\x01\xfa\xed\xacXQ\xe3+\x9b#\xb5\xf9A\x1a\x8c+\xacJ\xae>\xd4\xdd{\x81\x1d\xd1\xa7.\xa4\xaaq\x00\x00\x00\x00\x04\x96\xa26\x01AUWV\x00\x00\x00\x00\x00\t\xa1\xf30\x00\x00\'\x10\xcf\x1al\xb0?J\xb9\xd6ew\xf8cQi\xc4d\xc5R\xc1)\x01\x00U\x00\xec]9\x98F\xa9 \x9f?\xe5\x88\x1dp\xaa\xe9&\x8c\x943\x9f\xf9\x81~\x8d\x18\xff\x19\xfa\x05\xee\xa1\xc8\x00\x00\x00\x00\x03k\xedT\x00\x00\x00\x00\x00\x00\xe1>\xff\xff\xff\xf8\x00\x00\x00\x00f\xd0@\x07\x00\x00\x00\x00f\xd0@\x06\x00\x00\x00\x00\x03k?\xdf\x00\x00\x00\x00\x00\x00\xea\xca\n\xc7\xa4\x97\xb7\x03\xde\xbfA\xae\xfd\x9c\xbfj\x11\x9b\xce\x17\x02\xd45\xb08\xda\x19\xff4\x12\xff\xb2\xecD\xd2"})\x80\\-\xb4;_\xe5\x9f\x9c\nF\xd5\x08(w\x81_YY\x7f$r\x8e\x92\x17<\xbc\x1f\xd9\xabh0a\xf2\x7f\x86`\xf8qR\xa8Y\xb3\xa1\xc3\x96\x1b\x12\xcc\xdf\x1cDF\xc7$\xb5\xf6\xca\xa8zb\xea9\xe5p\x08\xce\xe7\xe35\x07\x07&5X\xdcrC\xd29\xdd\xc5\xa3\xc9\xd3\xbeMj\x06\xd7\x91\xee\xe9s\x15t\xb7\x19&\x8dI\\\xf79\x0b\xd21\xbd4B>\xad4\x1eo?i\xac\xbdC$\xaa\x96\x8c\x89\xa6\x9e\xba"_\x95\x1f\xc4I\xfc\x89 \x0c\xb2\x9f\xfe\xc4\xcf\xaf\x98\xc4\xe12\xa2\xe3r\xd6cW\xdb\xa1\xff\xb8\xf3\xb7\rk\xb7Z\xb5'
# Decode the byte data
byte_data = Web3.to_bytes(hexstr=byte_data)

# Define the types used in the action=6 (COMMIT_PRICE)
types = [
    'address',   # oracleProviderFactory
    'uint256',   # value
    'bytes32[]', # ids
    'uint256',   # version
    'bytes',     # data
    'bool'       # revertOnFailure
]

# Decode the ABI-encoded byte data
decoded_data = decode(types, byte_data)

# Print the decoded values
print("oracleProviderFactory:", decoded_data[0])
print("value:", decoded_data[1])
print("ids:", decoded_data[2])
print("version:", decoded_data[3])
print("data:", decoded_data[4])
print("revertOnFailure:", decoded_data[5])
print(data_bytes.hex())